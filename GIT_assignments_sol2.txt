GIT Branching Assignment 2

Objective: Commit HTML, CSS & JavaScript assignments into GIT. 
SECTION-1 (HTML assignments) - Steps to follow:
1.	First take a backup of your assignments & projects. This is required because due to incorrect GIT operation you may lose your files.
2.	Create an empty directory ‘Assignments’ & cd to ‘Assignments’.
	 mkdir Assignments
	 cd Assignments
	
3.	Create a file README.txt inside ‘Assignments’ & write few lines about the contents of ‘Assignments’ folder.
	 touch README.txt
	 git init

4.	Commit README.txt file.
	git add .
	git commit -m "README.txt created"

5.	Now create a new branch ‘html-assignments’.
	 git branch html-assignments

6.	Switch to ‘html-assignments’ branch.
	 git checkout html-assignments

7.	Copy all HTML assignments inside ‘Assignments’ folder.
	get status

8.	Commit HTML assignments into ‘html-assignments’ branch.
	 git add .
	 git status
	 git commit -m "Copied HTML Assignments"
	
9.	Make minor changes into few files belonging to ‘html-assignments’ branch.
	git status
	
10.	Commit those changed files.
	 git add .
	 git commit -m "Changes is done in html-assignments branch"

11.	Switch to master branch.
	 git checkout master

12.	Make minor changes into README.txt file & commit those changes into master.
	git status
	 git add .
	 git commit -m " Changes in read.txt and master branch selected"

13.	Again switch to ‘html-assignments’ branch.
	git checkout html-assignments

14.	Make minor changes into few files belonging to ‘html-assignments’ branch.
	git status

15.	Commit those changes.
	git add .
	git commit -m "Few Changes in html branch "

16.	Switch to master.
	 git checkout master

17.	Merge ‘html-assignments’ branch into master. Confirm all html assignments are shown in master.
	 git merge html-assignments

18.	Finally delete the ‘html-assignments’ branch.
	git branch -d html-assignments
	git branch

SECTION-2 - (CSS assignments) Steps to follow:
1.	Create a new branch ‘css-assignments’.
	 git branch css-assignments

2.	Switch to ‘css-assignments’ branch.
	 git checkout css-assignments

3.	Copy all CSS assignments inside ‘Assignments’ folder.
	git status
	
4.	Commit CSS assignments into ‘css-assignments’ branch.
	 git add .
	 git commit -m "CSS File Added"

5.	Make minor changes into README.txt file on line 1 belonging to ‘css-assignments’ branch.
	 git status
	git add .

6.	Commit those changed files.
	git commit -m "README text file Added"

7.	Switch to master branch.
	 git checkout master

8.	Make minor changes into README.txt file on line 3 & commit those changes into master.
	 git status
 	git add .
	 git commit -m " Changes in master README File"

9.	Again switch to ‘css-assignments’ branch.
	git checkout css-assignments

10.	Make minor changes into few files belonging to ‘css-assignments’ branch.
	git status

11.	Commit those changes.
	git add .
	 git commit -m " Changes in css branch first.css"

12.	Switch to master.
	git checkout master

13.	Merge ‘css-assignments’ branch into master. Confirm all css assignments are shown in master.
	 git merge css-assignments

14.	Finally delete the ‘css-assignments’ branch.
	 git branch -d css-assignments

SECTION-3 - (JavaScript assignments) Steps to follow:

1.	Create a new branch ‘js-assignments’.
	git branch js-assignments

2.	Switch to ‘js-assignments’ branch.
	 git checkout js-assignments

3.	Copy all JavaScript assignments inside ‘Assignments’ folder.
	git status

4.	Commit JavaScript assignments into ‘js-assignments’ branch.
	git add .
	 git commit -m " JS Assignemnets Added"

5.	Make minor changes into README.txt file on line 1 belonging to ‘js-assignments’ branch.
	git status
	git add .

6.	Commit those changed files.
	git commit -m " Changes in Js Assignments"

7.	Switch to master branch.
	git checkout master

8.	Make minor changes into README.txt file on line 1 & commit those changes into master.
	git status
 	git add .
	 git commit -m " Changes in README File"

9.	Again switch to ‘js-assignments’ branch.
	git checkout js-assignments

10.	Make minor changes into few files belonging to ‘js-assignments’ branch.
	 git status

11.	Commit those changes.
	 git add .
	 git commit -m " Changes in JSS FILE"

12.	Switch to master.
	git checkout master

13.	Merge ‘js-assignments’ branch into master. Confirm all JavaScript assignments are shown in master.
	 git add .
	git commit -m " Changes in Merging"
	 git merge js-assignments

14.	Finally delete the ‘js-assignments’ branch.
	git branch -d js-assignments
	 git branch


